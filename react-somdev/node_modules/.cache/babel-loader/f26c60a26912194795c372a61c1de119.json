{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\SomaliDev\\\\react-somdev\\\\src\\\\Questions.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(25px, auto);\n`;\nexport const Questions = _ref => {\n  let {\n    apiData,\n    fileName\n  } = _ref;\n  const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: e => exportToCSV(apiData, fileName),\n    children: \"Export\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/git/SomaliDev/react-somdev/src/Questions.js"],"names":["React","styled","XLSX","GridWrapper","div","Questions","apiData","fileName","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","write","bookType","type","Blob","FileSaver","saveAs","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AACA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,OAAO,MAAMC,SAAS,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA0B;AAClD,QAAMC,QAAQ,GACZ,iFADF;AAEA,QAAMC,aAAa,GAAG,OAAtB;;AAEA,QAAMC,WAAW,GAAG,CAACJ,OAAD,EAAUC,QAAV,KAAuB;AACzC,UAAMI,EAAE,GAAGT,IAAI,CAACU,KAAL,CAAWC,aAAX,CAAyBP,OAAzB,CAAX;AACA,UAAMQ,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAV;AAAwBM,MAAAA,UAAU,EAAE,CAAC,MAAD;AAApC,KAAX;AACA,UAAMC,WAAW,GAAGhB,IAAI,CAACiB,KAAL,CAAWL,EAAX,EAAe;AAAEM,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAApB;AACA,UAAML,IAAI,GAAG,IAAIM,IAAJ,CAAS,CAACJ,WAAD,CAAT,EAAwB;AAAEG,MAAAA,IAAI,EAAEb;AAAR,KAAxB,CAAb;AACAe,IAAAA,SAAS,CAACC,MAAV,CAAiBR,IAAjB,EAAuBT,QAAQ,GAAGE,aAAlC;AACD,GAND;;AAQA,sBACE;AAAQ,IAAA,OAAO,EAAGgB,CAAD,IAAOf,WAAW,CAACJ,OAAD,EAAUC,QAAV,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhBM;KAAMF,S","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as XLSX from 'xlsx';\r\nconst GridWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  margin-top: 1em;\r\n  margin-left: 6em;\r\n  margin-right: 6em;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-auto-rows: minmax(25px, auto);\r\n`; \r\nexport const Questions = ({ apiData, fileName }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button onClick={(e) => exportToCSV(apiData, fileName)}>Export</button>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}